trigger:
  branches:
    include:
      - master  # or your main branch

pool:
  vmImage: 'ubuntu-latest'  # Using an Ubuntu agent for the pipeline

variables:
  # Define environment variables
  imageTag: '$(Build.BuildId)'  # The build ID will be used as the Docker image tag

steps:
  # Step 1: Checkout the code from Bitbucket
  - task: UseGitVersion@5
    inputs:
      versionSpec: 'latest'
      updateAssemblyInfo: true
  
  # Step 2: Set up Docker
  - task: DockerInstaller@0
    displayName: 'Install Docker'

  # Step 3: Build Docker images using Docker Compose
  - script: |
      docker-compose -f backend/compose.yml build
    displayName: 'Build Docker images'

  # Step 4: Push Docker images to Azure Container Registry (ACR)
  - task: Docker@2
    displayName: 'Login to ACR'
    inputs:
      containerRegistry: 'csdtms'  # Service connection to ACR
      command: 'login'

  - script: |
      docker-compose -f backend/compose.yml push
    displayName: 'Push Docker images to ACR'