trigger:
  branches:
    include:
      - main  # or the branch you want to trigger the pipeline on

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Azure Container Registry (ACR) details
  azureRegistryName: 'yourACRName'  # e.g., myregistry
  azureRegistryLoginServer: 'yourACRName.azurecr.io'
  azureSubscription: 'yourAzureSubscriptionServiceConnection'  # Azure subscription service connection name
  acrServiceConnection: 'yourACRServiceConnection'  # ACR service connection name
  aksServiceConnection: 'yourAKSServiceConnection'  # AKS service connection name
  kubernetesNamespace: 'default'  # Namespace in AKS where you want to deploy
  imageTag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Docker Images
  jobs:
  - job: BuildAndPush
    displayName: Build and Push Docker Images
    steps:
    - task: DockerInstaller@0
      displayName: Install Docker
      inputs:
        dockerVersion: 'latest'

    - checkout: self
      persistCredentials: true

    # Build and push Docker images for each microservice
    - template: build-and-push-docker-image.yml
      parameters:
        serviceName: 'match_ms'
        dockerfilePath: 'backend/match_ms/Dockerfile'
        contextPath: 'backend/match_ms'

    - template: build-and-push-docker-image.yml
      parameters:
        serviceName: 'matchmaking'
        dockerfilePath: 'backend/matchmaking/Dockerfile'
        contextPath: 'backend/matchmaking'

    - template: build-and-push-docker-image.yml
      parameters:
        serviceName: 'tournament_ms'
        dockerfilePath: 'backend/tournament_ms/Dockerfile'
        contextPath: 'backend/tournament_ms'

    - template: build-and-push-docker-image.yml
      parameters:
        serviceName: 'user_ms'
        dockerfilePath: 'backend/user_ms/Dockerfile'
        contextPath: 'backend/user_ms'

- stage: Deploy
  displayName: Deploy to Kubernetes
  dependsOn: Build
  jobs:
  - deployment: DeployToAKS
    displayName: Deploy to AKS
    environment: 'Development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Deploy to AKS
            inputs:
              action: deploy
              kubernetesServiceConnection: '$(aksServiceConnection)'
              namespace: '$(kubernetesNamespace)'
              manifests: |
                backend/k8s/*.yaml
              containers: |
                $(azureRegistryLoginServer)/match_ms:$(imageTag)
                $(azureRegistryLoginServer)/matchmaking:$(imageTag)
                $(azureRegistryLoginServer)/tournament_ms:$(imageTag)
                $(azureRegistryLoginServer)/user_ms:$(imageTag)
